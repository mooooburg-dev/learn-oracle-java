[ 항목 1 ]

		<!-- File Upload Library -->
		<dependency>
		    <groupId>commons-fileupload</groupId>
		    <artifactId>commons-fileupload</artifactId>
		    <version>1.4</version>
		</dependency>		
		<dependency>
		    <groupId>commons-io</groupId>
		    <artifactId>commons-io</artifactId>
		    <version>2.6</version>
		</dependency>
		
[ 항목 2 ]

	<!-- File Upload Handler (Class, Bean) Registration -->
	<beans:bean id="multipartResolver"
				class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	</beans:bean>

[ 항목 3 ]

		        <form action="write"
		        	  method="post"
		        	  enctype="multipart/form-data">
		        <table>
		            <tr>
		                <th>제목</th>
		                <td>
		                    <input type="text" name="title" style="width:580px" />
		                </td>
		            </tr>
		            <tr>
		                <th>작성자</th>
		                <td>
		                	<input type="hidden" name="uploader" value="${ loginuser.memberId }">
		                	${ loginuser.memberId }		                	
		                </td>
		            </tr>
		            <tr>
		                <th>첨부자료</th>
		                <td>
		                    <input type="file" name="attach" style="width:580px;height:20px" />
		                </td>
		            </tr>
		            <tr>
		                <th>자료설명</th>
		                <td>
		                	<textarea name="content" style="width:580px" rows="15"></textarea>
		                </td>
		            </tr>
		        </table>
		        <div class="buttons">
		        	<input type="submit" value="자료등록" style="height:25px" />
		        	<input type="button" value="취소" style="height:25px"  />
		        </div>
		        </form>
				
[ 항목 4 ]

	@RequestMapping(path = "/write", method = RequestMethod.POST)
	public String write(MultipartHttpServletRequest req, Upload upload) {
		
		MultipartFile mf = req.getFile("attach");
		if (mf != null) {
			
			ServletContext application = req.getServletContext();
			String path = application.getRealPath("/upload-files");
			
			String userFileName = mf.getOriginalFilename();
			if (userFileName.contains("\\")) { // iexplore 경우
				//C:\AAA\BBB\CCC.png -> CCC.png 
				userFileName = userFileName.substring(userFileName.lastIndexOf("\\") + 1);
			}
			String savedFileName = Util.makeUniqueFileName(userFileName);
			
			try {
				mf.transferTo(new File(path, savedFileName)); //파일 저장
								
				UploadFile uploadFile = new UploadFile();
				uploadFile.setUserFileName(userFileName);
				uploadFile.setSavedFileName(savedFileName);
				//uploadFile.setUploadNo(newUploadNo);
				//uploadService.registerUploadFile(uploadFile);
				ArrayList<UploadFile> files = new ArrayList<UploadFile>();
				files.add(uploadFile);
				upload.setFiles(files);
				
				//데이터 저장				
				uploadService.registerUploadTx(upload);
				
			} catch (Exception ex) {
				ex.printStackTrace();
			}
		}
		
		return "redirect:list";
	}
	
[ 항목 5 ]

	//@PathVariable : 요청 경로의 {}부분을 데이터로 읽는 annotation
	@RequestMapping(path = "/download/{fileNo}", method = RequestMethod.GET)
	public View download(@PathVariable int fileNo, Model model) {
		
		UploadFile file = uploadService.findUploadFileByUploadFileNo(fileNo);
		if (file == null) {
			return new RedirectView("/upload/list");
		}
		
		model.addAttribute("file", file);
		
		DownloadView v = new DownloadView();
		return v;
	}